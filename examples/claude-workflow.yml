name: Claude CodeRabbit Processor

# Triggered when @claude is mentioned in PR comments
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read

jobs:
  claude-code:
    # Only run on PRs when @claude is mentioned
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@claude')
    
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-tools-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - name: Setup Go tools (bd - Beads)
        run: |
          if ! command -v bd &> /dev/null; then
            echo "Installing bd..."
            go install github.com/steveyegge/beads/cmd/bd@latest
          else
            echo "bd already available (cached)"
          fi
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Process CodeRabbit review (if exists)
        id: process_review
        continue-on-error: true
        uses: benvenker/coderabbit-processor-action@v1
        with:
          pr-number: ${{ github.event.issue.number }}
          output-file: review_for_claude.md
          verbose: true

      - name: Run Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_args: |
            --model claude-sonnet-4-5-20250929
            --max-turns 10
            --allowedTools "Bash(gh pr:*),Bash(gh issue:*),Bash(gh api:*),Bash(npm install),Bash(npm run build),Bash(npm run check),Bash(npm run dev:local),Bash(npm run test*),Bash(npm run lint*),Bash(bd:*),Bash(npx ast-grep:*),Bash(git:*),Read,Write,Edit,GlobTool,GrepTool,View,BatchTool"
            --system-prompt "You are responding to a comment on GitHub PR #${{ github.event.issue.number }}.
            
            CONTEXT:
            - If review_for_claude.md exists, read it for pre-processed CodeRabbit feedback
            - Otherwise, respond to the specific comment that tagged you
            - Read /AGENTS.md for project context and standards
            
            WORKFLOW:
            1. Understand the request/feedback
            2. Read relevant AGENTS.md files for context
            3. Review existing code
            4. Make necessary changes following project standards
            5. Run 'npm run check' to validate
            6. Commit with descriptive message
            7. Reply to the comment confirming what was done
            
            DECISION PROCESS:
            - IF DISAGREE: Reply with reasoning (reference AGENTS.md)
            - IF AGREE + SIMPLE: Implement, test, commit, confirm
            - IF COMPLEX: Comment on complexity, optionally create Beads task
            
            TOOLS AVAILABLE:
            - gh (GitHub CLI) - for PR/issue interactions
            - bd (Beads) - for task management (bd quickstart for help)
            - npx ast-grep - for structural code analysis
            - npm - for builds, tests, linting
            - git - for commits and branches
            
            IMPORTANT:
            - Follow TypeScript + ESM standards
            - Keep Tailwind utility composition approach
            - Update AGENTS.md if introducing new patterns
            - No progress tracking comments unless critical"

      - name: Comment with processing stats
        if: steps.process_review.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `ðŸ“Š **CodeRabbit Review Processed**
            
            - Threads: ${{ steps.process_review.outputs.threads-count }}
            - Tokens: ~${{ steps.process_review.outputs.token-estimate }}
            - File: review_for_claude.md
            
            Claude is now processing...`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

